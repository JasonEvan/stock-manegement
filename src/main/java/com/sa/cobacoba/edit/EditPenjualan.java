/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.sa.cobacoba.edit;


public class EditPenjualan extends javax.swing.JPanel {

    java.sql.Connection cons = null;
    javax.swing.JFrame parentFrame;
    javax.swing.JMenu jMenu1; 
    javax.swing.JMenu jMenu2; 
    javax.swing.JMenu jMenu3;
    javax.swing.JMenu jMenu4;
    public EditPenjualan(java.sql.Connection conn, javax.swing.JFrame parentFrame, 
                            javax.swing.JMenu jMenu1, javax.swing.JMenu jMenu2, javax.swing.JMenu jMenu3, 
                            javax.swing.JMenu jMenu4) {
        this.parentFrame = parentFrame;
        this.jMenu1 = jMenu1;
        this.jMenu2 = jMenu2;
        this.jMenu3 = jMenu3;
        this.jMenu4 = jMenu4;
        
        cons = conn;
        initComponents();
        setComboBox(conn);
        setComboNamaBarang();
        peringatan.setVisible(false);
        dataPanel.setVisible(false);
        try {
            cons.setAutoCommit(false);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void setComboBox(java.sql.Connection conn) {
        try (java.sql.Statement stmt = conn.createStatement())
        {
            java.sql.ResultSet resultSet = stmt.executeQuery("SELECT nama_client, kota_client FROM client ORDER BY nama_client");
            while (resultSet.next()) {
                String nama = resultSet.getString("nama_client");
                String kota = resultSet.getString("kota_client");
                if (kota != null) {
                    nama = nama.concat("/");
                    nama = nama.concat(kota);
                }
                namaClient.addItem(nama);
            }
            namaClient.setSelectedIndex(-1);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void setComboNamaBarang() {
        try (java.sql.Statement stmt = cons.createStatement())
        {
            java.sql.ResultSet resultSet = stmt.executeQuery("SELECT nama_barang FROM stock ORDER BY nama_barang");
            while (resultSet.next()) {
                String namaBarangString = resultSet.getString("nama_barang");
                namaBarang.addItem(namaBarangString);
            }
            namaBarang.setSelectedIndex(-1);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, "Gagal query nama_barang", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidebarPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        namaClient = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        nomorNota = new javax.swing.JComboBox<>();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        dataPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        namaBarang = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jumlah = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        satuanHarga = new javax.swing.JTextField();
        checkHarga = new javax.swing.JButton();
        peringatan = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        nilaiNota = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        diskon = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        nilaiAkhir = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setMinimumSize(new java.awt.Dimension(1350, 750));
        setLayout(new java.awt.BorderLayout());

        sidebarPanel.setBackground(new java.awt.Color(51, 51, 51));
        sidebarPanel.setPreferredSize(new java.awt.Dimension(200, 750));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Penjualan");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Client");

        namaClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        namaClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaClientActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nomor Nota");

        nomorNota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        okButton.setBackground(new java.awt.Color(102, 102, 102));
        okButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        okButton.setForeground(new java.awt.Color(255, 255, 255));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(102, 102, 102));
        cancelButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidebarPanelLayout = new javax.swing.GroupLayout(sidebarPanel);
        sidebarPanel.setLayout(sidebarPanelLayout);
        sidebarPanelLayout.setHorizontalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namaClient, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(nomorNota, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sidebarPanelLayout.setVerticalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomorNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(405, Short.MAX_VALUE))
        );

        add(sidebarPanel, java.awt.BorderLayout.LINE_START);

        dataPanel.setBackground(new java.awt.Color(102, 102, 102));
        dataPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1150, 150));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nama Barang");

        namaBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Jumlah Barang");

        jumlah.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Harga Satuan");

        satuanHarga.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        checkHarga.setBackground(new java.awt.Color(51, 51, 51));
        checkHarga.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        checkHarga.setForeground(new java.awt.Color(255, 255, 255));
        checkHarga.setText("Check Harga");
        checkHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkHargaActionPerformed(evt);
            }
        });

        peringatan.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        peringatan.setForeground(new java.awt.Color(255, 0, 0));
        peringatan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        peringatan.setText("jLabel7");

        addButton.setBackground(new java.awt.Color(51, 51, 51));
        addButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(51, 51, 51));
        updateButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(51, 51, 51));
        deleteButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(peringatan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(satuanHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88)
                .addComponent(checkHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(jumlah)
                            .addComponent(satuanHarga))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(peringatan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addContainerGap())
        );

        dataPanel.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(1150, 109));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nilai Nota");
        jLabel8.setToolTipText("");

        nilaiNota.setEditable(false);
        nilaiNota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nilaiNota.setText("0");
        nilaiNota.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Diskon");
        jLabel9.setToolTipText("");

        diskon.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        diskon.setText("0");
        diskon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diskonKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("X");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("=");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Nilai Akhir");
        jLabel12.setToolTipText("");

        nilaiAkhir.setEditable(false);
        nilaiAkhir.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nilaiAkhir.setText("0");

        submitButton.setBackground(new java.awt.Color(51, 51, 51));
        submitButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nilaiNota, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jLabel10)
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diskon, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addComponent(jLabel11)
                .addGap(74, 74, 74)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nilaiAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(diskon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addComponent(jLabel10))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel11))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nilaiAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nilaiNota, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        dataPanel.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jTable1.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nama Barang", "Jumlah Barang", "Harga Jual", "Total Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        dataPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(dataPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void namaClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaClientActionPerformed
        nomorNota.removeAllItems();
        
        String nama;
        try {
            nama = namaClient.getSelectedItem().toString();
        } catch (java.lang.NullPointerException e) {
            return;
        }
        
//        GET CLIENT ID
        int id = getIdClient();
        
//        GET NOMOR NOTA
        String query = "SELECT nomor_nota FROM jnota WHERE id_client = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setInt(1, id);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                nomorNota.addItem(resultSet.getString("nomor_nota"));
            }
            nomorNota.setSelectedIndex(-1);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_namaClientActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String nomorNotaString;
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT lunas_nota FROM jnota WHERE nomor_nota = ?"))
        {
            nomorNotaString = nomorNota.getSelectedItem().toString();
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                int lunas = resultSet.getInt("lunas_nota");
                if (lunas != 0) {
                    throw new java.sql.SQLException("Tidak bisa edit, sudah ada pelunasan");
                }
            }
        } catch (java.lang.NullPointerException | java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        namaClient.setEditable(false);
        namaClient.setEnabled(false);
        nomorNota.setEditable(false);
        nomorNota.setEnabled(false);
        jMenu1.setEnabled(false);
        jMenu2.setEnabled(false);
        jMenu3.setEnabled(false);
        jMenu4.setEnabled(false);
        dataPanel.setVisible(true);
        
        // kosongin table
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();
        tblModel.setRowCount(0);

        // tampilin data
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT * FROM jual WHERE nomor_nota = ?"))
        {
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                String[] row = {
                    String.valueOf(resultSet.getInt("id")),
                    resultSet.getString("nama_barang"),
                    String.valueOf(resultSet.getInt("qty_barang")),
                    String.valueOf(resultSet.getInt("harga_barang")),
                    String.valueOf(resultSet.getInt("total_harga"))
                };
                tblModel.addRow(row);
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        // update harga
        updateHarga();
    }//GEN-LAST:event_okButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();
        String namaBarangString = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        String qtyBarang = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
        String hargaBarang = tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString();
        
        namaBarang.setSelectedItem(namaBarangString);
        jumlah.setText(qtyBarang);
        satuanHarga.setText(hargaBarang);
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // validate form
        boolean salah = validateFormEdit();
        if (salah)
            return;
        
        
        if (jTable1.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        // validate quantity
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();
        String namaBarangString = namaBarang.getSelectedItem().toString();
        int stockInt = Integer.parseInt(jumlah.getText());
        String namaBarangLama = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        int stockLama = Integer.parseInt(tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString());
        int stockDb = 0;
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT stock_akhir FROM stock WHERE nama_barang = ?"))
        {
            stmt.setString(1, namaBarangString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                stockDb = resultSet.getInt("stock_akhir");
            }
            
            
            if (namaBarangString.equals(namaBarangLama)) {
                if (stockInt > stockDb + stockLama) {
                    throw new java.sql.SQLException("Stock berlebih");
                }
            } else {
                if (stockInt > stockDb) {
                    throw new java.sql.SQLException("Stock berlebih");
                }
            }
            
            
        } catch (java.sql.SQLException e) {
            javax.swing.Timer timer = new javax.swing.Timer(5000, e2 -> peringatan.setVisible(false));
            timer.setRepeats(false);
            peringatan.setText(e.getMessage());
            peringatan.setVisible(true);
            timer.start();
            return;
        }
        
        
        // delete data lama
        deleteOldData();
        
        
        // add to table
        int satuHarga = Integer.parseInt(satuanHarga.getText());
        String[] row = {
            "",
            namaBarangString,
            String.valueOf(stockInt),
            satuanHarga.getText(),
            String.valueOf(stockInt * satuHarga)
        };
        
        tblModel.addRow(row);
        
        
        // update harga
        updateHarga();
        
        
        
        // insert new data
        insertNewData(namaBarangString, satuHarga, stockInt);
        
        
        
        // set all default values
        namaBarang.setSelectedIndex(-1);
        satuanHarga.setText("");
        jumlah.setText("");
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteOldData() {
        // get row data
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();
        int id = Integer.parseInt(tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString());
        String namaBarangString = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        int stockInt = Integer.parseInt(tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString());
        int satuHarga = Integer.parseInt(tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString());
        int totalHargaInt = Integer.parseInt(tblModel.getValueAt(jTable1.getSelectedRow(), 4).toString());
        
        
        // hapus row
        tblModel.removeRow(jTable1.getSelectedRow());
        
        
        // tambah stock, kurangi qty_out
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE stock SET stock_akhir = stock_akhir + ?, "
                + "qty_out = qty_out - ? WHERE nama_barang = ?"))
        {
            stmt.setInt(1, stockInt);
            stmt.setInt(2, stockInt);
            stmt.setString(3, namaBarangString);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        // delete database jual
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("DELETE FROM jual WHERE id = ?"))
        {
            stmt.setInt(1, id);
            stmt.execute();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // get id client
        int idClient = getIdClient();
        
        
        // kurangi saldo akhir piutang client
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE client SET sldakhir_piutang = sldakhir_piutang - ? WHERE id = ?"))
        {
            stmt.setInt(1, totalHargaInt);
            stmt.setInt(2, idClient);
            stmt.execute();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private int getIdClient() {
        String namaCli = null, kotaCli;
        String query;
        try (java.util.Scanner scanner = new java.util.Scanner(namaClient.getSelectedItem().toString()))
        {
            scanner.useDelimiter("/");
            namaCli = scanner.next();
            kotaCli = scanner.next();
            
            if (kotaCli == null)
                throw new java.util.NoSuchElementException();
            
        } catch (java.util.NoSuchElementException e) {
            kotaCli = null;
        }
        
        int id = 0;
        if (kotaCli == null) {
            query = "SELECT id FROM client WHERE nama_client = ? AND kota_client IS NULL";
            try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
            {
                stmt.setString(1, namaCli);
                java.sql.ResultSet resultSet = stmt.executeQuery();
                while (resultSet.next()) {
                    id = resultSet.getInt("id");
                }
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return 0;
            }
        } else {
            query = "SELECT id FROM client WHERE nama_client = ? AND kota_client = ?";
            try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
            {
                stmt.setString(1, namaCli);
                stmt.setString(2, kotaCli);
                java.sql.ResultSet resultSet = stmt.executeQuery();
                while (resultSet.next()) {
                    id = resultSet.getInt("id");
                }
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return 0;
            }
        }
        
        return id;
    }
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // validate form
        boolean salah = validateFormEdit();
        if (salah)
            return;
        
        // validate quantity
        String namaBarangString = namaBarang.getSelectedItem().toString();
        int stockInt = Integer.parseInt(jumlah.getText());
        int stockDb = 0;
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT stock_akhir FROM stock WHERE nama_barang = ?"))
        {
            stmt.setString(1, namaBarangString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                stockDb = resultSet.getInt("stock_akhir");
            }
            
            if (stockInt > stockDb) {
                throw new java.sql.SQLException("Stock barang berlebih");
            }
        } catch (java.sql.SQLException e) {
            javax.swing.Timer timer = new javax.swing.Timer(5000, e2 -> peringatan.setVisible(false));
            peringatan.setText(e.getMessage());
            timer.setRepeats(false);
            peringatan.setVisible(true);
            timer.start();
            return;
        }
        
        
        // add row
        int satuHarga = Integer.parseInt(satuanHarga.getText());
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();
        String[] row = {"", namaBarangString, jumlah.getText(), satuanHarga.getText(), 
                        String.valueOf(satuHarga * stockInt)};
        tblModel.addRow(row);
        
        
        // update harga
        updateHarga();
        
        
        // insert data
        insertNewData(namaBarangString, satuHarga, stockInt);
        
        
        // set all default values
        namaBarang.setSelectedIndex(-1);
        jumlah.setText("");
        satuanHarga.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    private void insertNewData(String namaBarangString, int satuHarga, int stockInt) {
        // get data nota lama
        int idClient = 0;
        java.sql.Date sqlDate = null;
        String namaSales = null;
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT * FROM jual WHERE nomor_nota = ? LIMIT 1"))
        {
            stmt.setString(1, nomorNota.getSelectedItem().toString());
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                idClient = resultSet.getInt("id_client");
                sqlDate = resultSet.getDate("tanggal_nota");
                namaSales = resultSet.getString("nama_sales");
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // add ke database jual
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("INSERT INTO jual "
                + "(id_client, nomor_nota, tanggal_nota, nama_barang, harga_barang, qty_barang, total_harga, diskon_nota, nama_sales) "
                + "VALUES (?,?,?,?,?,?,?,?,?)"))
        {
            stmt.setInt(1, idClient);
            stmt.setString(2, nomorNota.getSelectedItem().toString());
            stmt.setDate(3, sqlDate);
            stmt.setString(4, namaBarangString);
            stmt.setInt(5, Integer.parseInt(satuanHarga.getText()));
            stmt.setInt(6, Integer.parseInt(jumlah.getText()));
            stmt.setInt(7, satuHarga * stockInt);
            stmt.setDouble(8, Double.parseDouble(diskon.getText()));
            stmt.setString(9, namaSales);
            stmt.execute();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // nota di jnota diupdate nilai_notanya
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE jnota SET nilai_nota = ? WHERE nomor_nota = ?"))
        {
            stmt.setInt(1, Integer.parseInt(nilaiAkhir.getText()));
            stmt.setString(2, nomorNota.getSelectedItem().toString());
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // kurangin stock di database stock dan tambah qty_out
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE stock SET stock_akhir = stock_akhir - ?, "
                + "qty_out = qty_out + ? WHERE nama_barang = ?"))
        {
            stmt.setInt(1, stockInt);
            stmt.setInt(2, stockInt);
            stmt.setString(3, namaBarangString);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // tambahin saldo piutang client
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE client SET sldakhir_piutang = sldakhir_piutang + ? WHERE id = ?"))
        {
            stmt.setInt(1, satuHarga * stockInt);
            stmt.setInt(2, idClient);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (jTable1.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int status = javax.swing.JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data?", "CONFIRM", javax.swing.JOptionPane.YES_NO_OPTION);
        if (status == 0) {
            deleteOldData();
            updateHarga();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void diskonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diskonKeyReleased
        try {
            long hargaTotalLong = Long.parseLong(nilaiNota.getText());
            double diskonLong = Double.parseDouble(diskon.getText()) / 100;
            if (diskon.getText().isEmpty()) {
                throw new java.lang.NullPointerException();
            }
            long totalHargaDiskonLong = hargaTotalLong - Math.round(hargaTotalLong * diskonLong);
            nilaiAkhir.setText(String.valueOf(totalHargaDiskonLong));
            submitButton.setEnabled(true);
        } catch (java.lang.NullPointerException | java.lang.NumberFormatException e) {
            submitButton.setEnabled(false);
        }
    }//GEN-LAST:event_diskonKeyReleased

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        int status = javax.swing.JOptionPane.showConfirmDialog(null, "Sudah yakin?", "CONFIRM", javax.swing.JOptionPane.YES_NO_OPTION);
        if (status != 0)
            return;
        
        double diskonNota = Double.parseDouble(diskon.getText()) / 100;
        String nomorNotaString = nomorNota.getSelectedItem().toString();
        
        // update diskon_nota db jual
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE jual SET diskon_nota = ? WHERE nomor_nota = ?"))
        {
            stmt.setDouble(1, diskonNota);
            stmt.setString(2, nomorNotaString);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // update diskon_nota, nilai_nota, saldo_nota di db jnota
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE jnota "
                + "SET diskon_nota = ?, nilai_nota = ?, saldo_nota = nilai_nota - lunas_nota "
                + "WHERE nomor_nota = ?"))
        {
            stmt.setDouble(1, diskonNota);
            stmt.setInt(2, Integer.parseInt(nilaiAkhir.getText()));
            stmt.setString(3, nomorNotaString);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // commit
        try {
            cons.commit();
            javax.swing.JOptionPane.showMessageDialog(null, "Berhasil edit nota", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "Error Commit", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        parentFrame.dispose();
        new com.sa.cobacoba.MainWindow().setVisible(true);
    }//GEN-LAST:event_submitButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        try {
            cons.rollback();
            cons.close();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        parentFrame.dispose();
        new com.sa.cobacoba.MainWindow().setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void checkHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkHargaActionPerformed
        int idClient = getIdClient();
        new PilihanMenuJual(cons, idClient).setVisible(true);
    }//GEN-LAST:event_checkHargaActionPerformed

    private boolean validateFormEdit() {
        try {
            String namaBarangString = namaBarang.getSelectedItem().toString();

            if (namaBarangString.isEmpty()) {
                throw new Exception("nama barang kosong");
            }
            
            Integer.parseInt(satuanHarga.getText());
            Integer.parseInt(jumlah.getText());
        } catch (Exception e) {
            javax.swing.Timer timer = new javax.swing.Timer(5000, e2 -> peringatan.setVisible(false));
            peringatan.setText(e.getMessage());
            timer.setRepeats(false);
            peringatan.setVisible(true);
            timer.start();
            return true;
        }
        
        return false;
    }
    
    private void updateHarga() {
        long hargaTotalLong = 0;
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) jTable1.getModel();
        if (tblModel.getRowCount() == 0) {
            nilaiNota.setText("0");
            nilaiAkhir.setText("0");
            return;
        }
        
        for (int i = 0; i < tblModel.getRowCount(); i++) {
            hargaTotalLong += Long.parseLong(tblModel.getValueAt(i, 4).toString());
        }
        nilaiNota.setText(String.valueOf(hargaTotalLong));
        double diskonLong = Double.parseDouble(diskon.getText()) / 100;
        long totalHargaDiskonLong = hargaTotalLong - Math.round(hargaTotalLong * diskonLong);
        nilaiAkhir.setText(String.valueOf(totalHargaDiskonLong));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton checkHarga;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField diskon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jumlah;
    private javax.swing.JComboBox<String> namaBarang;
    private javax.swing.JComboBox<String> namaClient;
    private javax.swing.JTextField nilaiAkhir;
    private javax.swing.JTextField nilaiNota;
    private javax.swing.JComboBox<String> nomorNota;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel peringatan;
    private javax.swing.JTextField satuanHarga;
    private javax.swing.JPanel sidebarPanel;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
