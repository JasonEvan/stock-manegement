/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.sa.cobacoba.edit;


public class EditReturPenjualan extends javax.swing.JPanel {

    java.sql.Connection cons;
    javax.swing.JFrame parentFrame;
    javax.swing.JMenu jMenu1; 
    javax.swing.JMenu jMenu2; 
    javax.swing.JMenu jMenu3;
    javax.swing.JMenu jMenu4;
    public EditReturPenjualan(java.sql.Connection conn, javax.swing.JFrame parentFrame, 
                              javax.swing.JMenu jMenu1, javax.swing.JMenu jMenu2, javax.swing.JMenu jMenu3,
                              javax.swing.JMenu jMenu4) {
        cons = conn;
        this.parentFrame = parentFrame;
        this.jMenu1 = jMenu1;
        this.jMenu2 = jMenu2;
        this.jMenu3 = jMenu3;
        this.jMenu4 = jMenu4;
        
        initComponents();
        jPanel2.setVisible(false);
        setComboBox();
        
        try {
            cons.setAutoCommit(false);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void setComboBox() {
        try (java.sql.Statement stmt = cons.createStatement())
        {
            java.sql.ResultSet resultSet = stmt.executeQuery("SELECT nama_client, kota_client FROM client ORDER BY nama_client");
            while (resultSet.next()) {
                String nama = resultSet.getString("nama_client");
                String kota = resultSet.getString("kota_client");
                if (kota != null) {
                    nama = nama.concat("/");
                    nama = nama.concat(kota);
                }
                namaClient.addItem(nama);
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        } finally {
            namaClient.setSelectedIndex(-1);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        namaClient = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        nomorNota = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        namaBarang = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jumlahBarang = new javax.swing.JTextField();
        returButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        simpanButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        nilaiNota = new javax.swing.JTextField();
        diskon = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        nilaiRetur = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNota = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRetur = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setMinimumSize(new java.awt.Dimension(1350, 665));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 665));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Retur Penjualan");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Client");

        namaClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        namaClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaClientActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nomor Nota");

        nomorNota.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        backButton.setBackground(new java.awt.Color(51, 51, 51));
        backButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        submitButton.setBackground(new java.awt.Color(51, 51, 51));
        submitButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nomorNota, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namaClient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomorNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(388, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel3.setPreferredSize(new java.awt.Dimension(1150, 150));
        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nama Barang");

        namaBarang.setEditable(false);
        namaBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Jumlah Barang");

        jumlahBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        returButton.setBackground(new java.awt.Color(51, 51, 51));
        returButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        returButton.setForeground(new java.awt.Color(255, 255, 255));
        returButton.setText("Retur Barang >>");
        returButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jumlahBarang)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(returButton, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jumlahBarang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(returButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.add(jPanel6);

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        deleteButton.setBackground(new java.awt.Color(51, 51, 51));
        deleteButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        simpanButton.setBackground(new java.awt.Color(51, 51, 51));
        simpanButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        simpanButton.setForeground(new java.awt.Color(255, 255, 255));
        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(simpanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jPanel3.add(jPanel7);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setPreferredSize(new java.awt.Dimension(1150, 150));
        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        nilaiNota.setEditable(false);
        nilaiNota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nilaiNota.setText("0");
        nilaiNota.setToolTipText("");

        diskon.setEditable(false);
        diskon.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nilai Nota");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Diskon");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(diskon))
                .addGap(92, 92, 92)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nilaiNota, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(diskon)
                    .addComponent(nilaiNota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel8);

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nilai Retur");

        nilaiRetur.setEditable(false);
        nilaiRetur.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        nilaiRetur.setText("0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nilaiRetur, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(322, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nilaiRetur, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel9);

        jPanel2.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        tableNota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        tableNota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Barang", "Harga Jual", "Jumlah", "Total Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableNota.setRowHeight(25);
        tableNota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableNotaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableNota);

        jPanel5.add(jScrollPane1);

        tableRetur.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        tableRetur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Barang", "Harga Jual", "Jumlah", "Total Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRetur.setRowHeight(25);
        jScrollPane2.setViewportView(tableRetur);

        jPanel5.add(jScrollPane2);

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void namaClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaClientActionPerformed
        String namaClientString;
        try {
            namaClientString = namaClient.getSelectedItem().toString();
        } catch (java.lang.NullPointerException e) {
            return;
        }
        
        int idClient = getClientId(namaClientString);
        
        nomorNota.removeAllItems();
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT nomor_nota FROM jnota "
                + "WHERE id_client = ?"))
        {
            stmt.setInt(1, idClient);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                nomorNota.addItem(resultSet.getString("nomor_nota"));
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        } finally {
            nomorNota.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_namaClientActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        try {
            cons.rollback();
            cons.close();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        new com.sa.cobacoba.MainWindow().setVisible(true);
        parentFrame.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        boolean salah = validateAll();
        if (salah)
            return;
        
        namaClient.setEditable(false);
        namaClient.setEnabled(false);
        nomorNota.setEditable(false);
        nomorNota.setEnabled(false);
        jPanel2.setVisible(true);
        submitButton.setEnabled(false);
        
        jMenu1.setEnabled(false);
        jMenu2.setEnabled(false);
        jMenu3.setEnabled(false);
        jMenu4.setEnabled(false);
        
        setNota();
        updateHargaNota();
        updateHargaRetur();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void tableNotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableNotaMouseClicked
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableNota.getModel();
        namaBarang.setText(tblModel.getValueAt(tableNota.getSelectedRow(), 1).toString());
        jumlahBarang.setText(tblModel.getValueAt(tableNota.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_tableNotaMouseClicked

    private void returButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returButtonActionPerformed
        javax.swing.table.DefaultTableModel notaModel = (javax.swing.table.DefaultTableModel) tableNota.getModel();
        javax.swing.table.DefaultTableModel returModel = (javax.swing.table.DefaultTableModel) tableRetur.getModel();

        if (tableNota.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // validate jumlah
        int jumlahInt = Integer.parseInt(jumlahBarang.getText());
        int jumlahTable = Integer.parseInt(notaModel.getValueAt(tableNota.getSelectedRow(), 3).toString());
        if (jumlahInt > jumlahTable) {
            javax.swing.JOptionPane.showMessageDialog(null, "Jumlah Retur tidak boleh lebih besar dari jumlah barang", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        // get row table
        int idTable = Integer.parseInt(notaModel.getValueAt(tableNota.getSelectedRow(), 0).toString());
        String namaBarangString = notaModel.getValueAt(tableNota.getSelectedRow(), 1).toString();
        int hargaJualInt = Integer.parseInt(notaModel.getValueAt(tableNota.getSelectedRow(), 2).toString());
        
        
        // insert ke table retur
        String[] row = {
            String.valueOf(idTable),
            namaBarangString,
            String.valueOf(hargaJualInt),
            String.valueOf(jumlahInt),
            String.valueOf(hargaJualInt * jumlahInt)
        };        
        
        returModel.addRow(row);
        
        
        // kurangi jumlah yang diselect rownya
        notaModel.setValueAt(jumlahTable - jumlahInt, tableNota.getSelectedRow(), 3);
        
        // update total harga row
        notaModel.setValueAt(hargaJualInt * (jumlahTable - jumlahInt), tableNota.getSelectedRow(), 4);
                
        
        // update harga
        updateHargaNota();
        updateHargaRetur();
        
        
        // set default values
        namaBarang.setText("");
        jumlahBarang.setText("");
        
    }//GEN-LAST:event_returButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        javax.swing.table.DefaultTableModel notaModel = (javax.swing.table.DefaultTableModel) tableNota.getModel();
        javax.swing.table.DefaultTableModel returModel = (javax.swing.table.DefaultTableModel) tableRetur.getModel();
        
        if (tableRetur.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        
        // get row data
        int id = Integer.parseInt(returModel.getValueAt(tableRetur.getSelectedRow(), 0).toString());
        String namaBarangString = returModel.getValueAt(tableRetur.getSelectedRow(), 1).toString();
        int hargaJualInt = Integer.parseInt(returModel.getValueAt(tableRetur.getSelectedRow(), 2).toString());
        int jumlahInt = Integer.parseInt(returModel.getValueAt(tableRetur.getSelectedRow(), 3).toString());
        
        
        // cari apakah ada di table nota
        int indeks = searchRow(notaModel, id);
        
        // kalo ada kita tambahkan 
        if (indeks != -1) {
            int jumlahTable = Integer.parseInt(notaModel.getValueAt(indeks, 3).toString());
            notaModel.setValueAt(jumlahTable + jumlahInt, indeks, 3);
            notaModel.setValueAt(hargaJualInt * (jumlahTable + jumlahInt), indeks, 4);
        }
        
        // kalo nda ada kita insert ulang
        else {
            String[] row = {
                String.valueOf(id),
                namaBarangString,
                String.valueOf(hargaJualInt),
                String.valueOf(jumlahInt),
                String.valueOf(hargaJualInt * jumlahInt)
            };
            notaModel.addRow(row);
        }
        
        // hapus row retur
        returModel.removeRow(tableRetur.getSelectedRow());
        
        
        // update harga
        updateHargaNota();
        updateHargaRetur();
        
        // set all default values
        namaBarang.setText("");
        jumlahBarang.setText("");
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        int status = javax.swing.JOptionPane.showConfirmDialog(null, "Sudah yakin dengan datanya?", "Sure?", javax.swing.JOptionPane.YES_NO_OPTION);
        if (status != 0)
            return;
        
        javax.swing.table.DefaultTableModel notaModel = (javax.swing.table.DefaultTableModel) tableNota.getModel();
        javax.swing.table.DefaultTableModel returModel = (javax.swing.table.DefaultTableModel) tableRetur.getModel();
        
        // get nota data
        String namaClientString = namaClient.getSelectedItem().toString();
        int clientId = getClientId(namaClientString);
        String nomorNotaString = nomorNota.getSelectedItem().toString();
        
        
        // ambil data tanggal_nota, nama_sales, diskon_nota
        java.sql.Date sqlNotaDate = null;
        String namaSalesString = null;
        Double diskonNota = Double.parseDouble(diskon.getText());
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT tanggal_nota, nama_sales "
                + "FROM jual WHERE nomor_nota = ? LIMIT 1"))
        {
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                sqlNotaDate = resultSet.getDate("tanggal_nota");
                namaSalesString = resultSet.getString("nama_sales");
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // delete data from db jual
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("DELETE FROM jual WHERE nomor_nota = ?"))
        {
            stmt.setString(1, nomorNotaString);
            stmt.execute();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // insert ulang ke db
        String query = "INSERT INTO jual (id, id_client, nama_sales, "
                    + "nomor_nota, tanggal_nota, nama_barang, harga_barang, qty_barang, total_harga, diskon_nota) VALUES "
                    + "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            for (int i = 0; i < notaModel.getRowCount(); i++) {
                int id = Integer.parseInt(notaModel.getValueAt(i, 0).toString());
                String namaBarangString = notaModel.getValueAt(i, 1).toString();
                int hargaJualInt = Integer.parseInt(notaModel.getValueAt(i, 2).toString());
                int jumlahInt = Integer.parseInt(notaModel.getValueAt(i, 3).toString());
                int totalHargaInt = Integer.parseInt(notaModel.getValueAt(i, 4).toString());
                
                stmt.setInt(1, id);
                stmt.setInt(2, clientId);
                stmt.setString(3, namaSalesString);
                stmt.setString(4, nomorNotaString);
                stmt.setDate(5, sqlNotaDate);
                stmt.setString(6, namaBarangString);
                stmt.setInt(7, hargaJualInt);
                stmt.setInt(8, jumlahInt);
                stmt.setInt(9, totalHargaInt);
                stmt.setDouble(10, diskonNota);
                
                stmt.addBatch();
            }
            
            stmt.executeBatch();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // get nilai_nota lama di jnota
        int nilaiNotaLama = 0;
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT nilai_nota FROM jnota WHERE nomor_nota = ?"))
        {
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                nilaiNotaLama = resultSet.getInt("nilai_nota");
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // update nilai_nota dan saldo_nota di jnota
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE jnota SET nilai_nota = ?, "
                + "saldo_nota = nilai_nota - lunas_nota WHERE nomor_nota = ?"))
        {
            stmt.setInt(1, Integer.parseInt(nilaiNota.getText()));
            stmt.setString(2, nomorNotaString);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // kurangi sldakhir_piutang client dengan nilai_nota lama
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE client "
                + "SET sldakhir_piutang = sldakhir_piutang - ? WHERE id = ?"))
        {
            stmt.setInt(1, nilaiNotaLama);
            stmt.setInt(2, clientId);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // tambah sldakhir_piutang client dengan nilai_nota baru
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE client "
                + "SET sldakhir_piutang = sldakhir_piutang + ? WHERE id = ?"))
        {
            stmt.setInt(1, Integer.parseInt(nilaiNota.getText()));
            stmt.setInt(2, clientId);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        java.sql.Date sqlReturDate = null;
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT tanggal_retur FROM jretur WHERE nomor_nota = ?"))
        {
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                sqlReturDate = resultSet.getDate("tanggal_retur");
                break;
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        // Hapus data yg di jretur dulu
        query = "DELETE FROM jretur WHERE nomor_nota = ?";
        
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query)) {
            stmt.setString(1, nomorNotaString);
            stmt.execute();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        if (returModel.getRowCount() != 0) {
            
            // insert ke jretur
            query = "INSERT INTO jretur (id_client, id_jual, nomor_nota, tanggal_nota, nama_barang, "
                    + "harga_barang, qty_barang, total_harga, tanggal_retur, nama_sales) VALUES "
                    + "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

            try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
            {
                for (int i = 0; i < returModel.getRowCount(); i++) {
                    int id = Integer.parseInt(returModel.getValueAt(i, 0).toString());
                    String namaBarangString = returModel.getValueAt(i, 1).toString();
                    int hargaJualInt = Integer.parseInt(returModel.getValueAt(i, 2).toString());
                    int jumlahInt = Integer.parseInt(returModel.getValueAt(i, 3).toString());
                    int totalHargaInt = Integer.parseInt(returModel.getValueAt(i, 4).toString());

                    stmt.setInt(1, clientId);
                    stmt.setInt(2, id);
                    stmt.setString(3, nomorNotaString);
                    stmt.setDate(4, sqlNotaDate);
                    stmt.setString(5, namaBarangString);
                    stmt.setInt(6, hargaJualInt);
                    stmt.setInt(7, jumlahInt);
                    stmt.setInt(8, totalHargaInt);
                    stmt.setDate(9, sqlReturDate);
                    stmt.setString(10, namaSalesString);

                    stmt.addBatch();

                }

                stmt.executeBatch();
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
        try {
            cons.commit();
            cons.close();
            javax.swing.JOptionPane.showMessageDialog(null, "Success edit retur barang", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        new com.sa.cobacoba.MainWindow().setVisible(true);
        parentFrame.dispose();
    }//GEN-LAST:event_simpanButtonActionPerformed

    private int searchRow(javax.swing.table.DefaultTableModel notaModel, int id) {
        for (int i = 0; i < notaModel.getRowCount(); i++) {
            int idTable = Integer.parseInt(notaModel.getValueAt(i, 0).toString());
            if (idTable == id)
                return i;
        }
        return -1;
    }
    
    private void updateHargaNota() {
        long hargaTotalLong = 0;
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableNota.getModel();
        
        if (tblModel.getRowCount() == 0){
            nilaiNota.setText("0");
            return;
        }
        
        for (int i = 0; i < tblModel.getRowCount(); i++) {
            hargaTotalLong += Long.parseLong(tblModel.getValueAt(i, 4).toString());
        }
        long nilaiAkhir = (long) (hargaTotalLong - (hargaTotalLong * Double.parseDouble(diskon.getText())));
        nilaiNota.setText(String.valueOf(nilaiAkhir));
    }
    
    private void updateHargaRetur() {
        long hargaTotalLong = 0;
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableRetur.getModel();
        
        if (tblModel.getRowCount() == 0){
            nilaiRetur.setText("0");
            return;
        }
        
        for (int i = 0; i < tblModel.getRowCount(); i++) {
            hargaTotalLong += Long.parseLong(tblModel.getValueAt(i, 4).toString());
        }
        nilaiRetur.setText(String.valueOf(hargaTotalLong));
    }
    
    private void setNota() {
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableNota.getModel();
        javax.swing.table.DefaultTableModel returModel = (javax.swing.table.DefaultTableModel) tableRetur.getModel();
        
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT id, nama_barang, harga_barang, "
                + "qty_barang, total_harga, diskon_nota FROM jual WHERE nomor_nota = ?"))
        {
            stmt.setString(1, nomorNota.getSelectedItem().toString());
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                String[] row = {
                    String.valueOf(resultSet.getInt("id")),
                    resultSet.getString("nama_barang"),
                    String.valueOf(resultSet.getInt("harga_barang")),
                    String.valueOf(resultSet.getInt("qty_barang")),
                    String.valueOf(resultSet.getInt("total_harga"))
                };
                tblModel.addRow(row);
                diskon.setText(String.valueOf(resultSet.getDouble("diskon_nota")));
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT id_jual, nama_barang, harga_barang, "
                + "qty_barang, total_harga FROM jretur WHERE nomor_nota = ?")) {
            stmt.setString(1, nomorNota.getSelectedItem().toString());
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                String[] row = {
                    String.valueOf(resultSet.getInt("id_jual")),
                    resultSet.getString("nama_barang"),
                    String.valueOf(resultSet.getInt("harga_barang")),
                    String.valueOf(resultSet.getInt("qty_barang")),
                    String.valueOf(resultSet.getInt("total_harga"))
                };
                returModel.addRow(row);
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
        
    private boolean validateAll() {
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT lunas_nota FROM jnota WHERE nomor_nota = ?"))
        {
            namaClient.getSelectedItem().toString();
            
            String nomorNotaString = nomorNota.getSelectedItem().toString();
            
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                int lunasNotaInt = resultSet.getInt("lunas_nota");
                if (lunasNotaInt != 0) {
                    throw new java.sql.SQLException("Sudah ada pelunasan, tidak boleh retur");
                }
            }
        } catch (java.lang.NullPointerException | java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return true;
        }
        
        try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT * FROM jretur WHERE nomor_nota = ?"))
        {   
            String nomorNotaString = nomorNota.getSelectedItem().toString();
            boolean adaRetur = false;
            stmt.setString(1, nomorNotaString);
            java.sql.ResultSet resultSet = stmt.executeQuery();
            while (resultSet.next()) {
                adaRetur = true;
                break;
            }
            
            if (!adaRetur) {
                throw new java.sql.SQLException("Tidak ada barang retur yang perlu diupdate");
            }
        } catch (java.lang.NullPointerException | java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return true;
        }
        return false;
    }
    
    private int getClientId(String namaClientString) {
        String namaCli = null, kotaCli;
        String query;
        try (java.util.Scanner scanner = new java.util.Scanner(namaClientString))
        {
            scanner.useDelimiter("/");
            namaCli = scanner.next();
            kotaCli = scanner.next();
            
            if (kotaCli == null)
                throw new java.util.NoSuchElementException();
            
        } catch (java.util.NoSuchElementException e) {
            kotaCli = null;
        }
        
        int id = 0;
        if (kotaCli == null) {
            query = "SELECT id FROM client WHERE nama_client = ? AND kota_client IS NULL";
            try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
            {
                stmt.setString(1, namaCli);
                java.sql.ResultSet resultSet = stmt.executeQuery();
                while (resultSet.next()) {
                    id = resultSet.getInt("id");
                }
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return 0;
            }
        } else {
            query = "SELECT id FROM client WHERE nama_client = ? AND kota_client = ?";
            try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
            {
                stmt.setString(1, namaCli);
                stmt.setString(2, kotaCli);
                java.sql.ResultSet resultSet = stmt.executeQuery();
                while (resultSet.next()) {
                    id = resultSet.getInt("id");
                }
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return 0;
            }
        }
        
        return id;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField diskon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jumlahBarang;
    private javax.swing.JTextField namaBarang;
    private javax.swing.JComboBox<String> namaClient;
    private javax.swing.JTextField nilaiNota;
    private javax.swing.JTextField nilaiRetur;
    private javax.swing.JComboBox<String> nomorNota;
    private javax.swing.JButton returButton;
    private javax.swing.JButton simpanButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JTable tableNota;
    private javax.swing.JTable tableRetur;
    // End of variables declaration//GEN-END:variables
}
