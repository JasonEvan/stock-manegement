/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.sa.cobacoba.edit;


public class EditDaftar extends javax.swing.JPanel {

    java.sql.Connection cons = null;
    private javax.swing.JFrame parentFrame;
    javax.swing.JMenu jMenu1; 
    javax.swing.JMenu jMenu2; 
    javax.swing.JMenu jMenu3;
    javax.swing.JMenu jMenu4;
    public EditDaftar(java.sql.Connection conn, javax.swing.JFrame parentFrame,
                     javax.swing.JMenu jMenu1, javax.swing.JMenu jMenu2, javax.swing.JMenu jMenu3, 
                     javax.swing.JMenu jMenu4) {
        this.parentFrame = parentFrame;
        this.jMenu1 = jMenu1;
        this.jMenu2 = jMenu2;
        this.jMenu3 = jMenu3;
        this.jMenu4 = jMenu4;
        
        cons = conn;
        initComponents();
        dataPanel.setVisible(false);
        try {
            cons.setAutoCommit(false);
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidebarPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        pilihan = new javax.swing.JComboBox<>();
        dataPanel = new javax.swing.JPanel();
        clientPanel = new javax.swing.JPanel();
        updateClient = new javax.swing.JButton();
        submitClient = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        namaClient = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        kotaClient = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        alamatClient = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        noTelpClient = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        noHPClient = new javax.swing.JTextField();
        salesPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        namaSales = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        nomorSales = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        noTelpSales = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        kodeSales = new javax.swing.JTextField();
        updateSales = new javax.swing.JButton();
        submitSales = new javax.swing.JButton();
        barangPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        namaBarang = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        hargaBeli = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        hargaJual = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        satuan = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        modal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        rusak = new javax.swing.JTextField();
        updateBarang = new javax.swing.JButton();
        submitBarang = new javax.swing.JButton();
        clientScrollPane = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        salesScrollPane = new javax.swing.JScrollPane();
        salesmanTable = new javax.swing.JTable();
        barangScrollPane = new javax.swing.JScrollPane();
        barangTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setMinimumSize(new java.awt.Dimension(1350, 750));
        setLayout(new java.awt.BorderLayout());

        sidebarPanel.setBackground(new java.awt.Color(51, 51, 51));
        sidebarPanel.setPreferredSize(new java.awt.Dimension(200, 750));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Daftar");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Pilihan");

        okButton.setBackground(new java.awt.Color(102, 102, 102));
        okButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        okButton.setForeground(new java.awt.Color(255, 255, 255));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(102, 102, 102));
        cancelButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        pilihan.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        pilihan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Client", "Barang", "Salesman" }));

        javax.swing.GroupLayout sidebarPanelLayout = new javax.swing.GroupLayout(sidebarPanel);
        sidebarPanel.setLayout(sidebarPanelLayout);
        sidebarPanelLayout.setHorizontalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarPanelLayout.createSequentialGroup()
                        .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pilihan, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sidebarPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        sidebarPanelLayout.setVerticalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pilihan, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(499, Short.MAX_VALUE))
        );

        add(sidebarPanel, java.awt.BorderLayout.LINE_START);

        dataPanel.setBackground(new java.awt.Color(102, 102, 102));
        dataPanel.setLayout(new java.awt.BorderLayout());

        clientPanel.setBackground(new java.awt.Color(102, 102, 102));
        clientPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        clientPanel.setPreferredSize(new java.awt.Dimension(1150, 150));

        updateClient.setBackground(new java.awt.Color(51, 51, 51));
        updateClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        updateClient.setForeground(new java.awt.Color(255, 255, 255));
        updateClient.setText("Update");
        updateClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateClientActionPerformed(evt);
            }
        });

        submitClient.setBackground(new java.awt.Color(51, 51, 51));
        submitClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        submitClient.setForeground(new java.awt.Color(255, 255, 255));
        submitClient.setText("Submit");
        submitClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitClientActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Client");

        namaClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Kota Client");

        kotaClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Alamat");

        alamatClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nomor Telepon");

        noTelpClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nomor Handphone");

        noHPClient.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        javax.swing.GroupLayout clientPanelLayout = new javax.swing.GroupLayout(clientPanel);
        clientPanel.setLayout(clientPanelLayout);
        clientPanelLayout.setHorizontalGroup(
            clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientPanelLayout.createSequentialGroup()
                .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(updateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(submitClient, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kotaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alamatClient, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noTelpClient, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noHPClient, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        clientPanelLayout.setVerticalGroup(
            clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(clientPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alamatClient, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(clientPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kotaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(clientPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(noTelpClient, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(clientPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(noHPClient, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(clientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(submitClient, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        dataPanel.add(clientPanel, java.awt.BorderLayout.NORTH);

        salesPanel.setBackground(new java.awt.Color(102, 102, 102));
        salesPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        salesPanel.setPreferredSize(new java.awt.Dimension(1150, 150));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nama Salesman");

        namaSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nomer Sales");

        nomorSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nomor Telepon");

        noTelpSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Kode Sales");

        kodeSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        updateSales.setBackground(new java.awt.Color(51, 51, 51));
        updateSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        updateSales.setForeground(new java.awt.Color(255, 255, 255));
        updateSales.setText("Update");
        updateSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSalesActionPerformed(evt);
            }
        });

        submitSales.setBackground(new java.awt.Color(51, 51, 51));
        submitSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        submitSales.setForeground(new java.awt.Color(255, 255, 255));
        submitSales.setText("Submit");
        submitSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitSalesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout salesPanelLayout = new javax.swing.GroupLayout(salesPanel);
        salesPanel.setLayout(salesPanelLayout);
        salesPanelLayout.setHorizontalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namaSales, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomorSales, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noTelpSales, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kodeSales, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(updateSales, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(submitSales, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        salesPanelLayout.setVerticalGroup(
            salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kodeSales, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noTelpSales, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomorSales, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(salesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namaSales, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(salesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(submitSales, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        dataPanel.add(salesPanel, java.awt.BorderLayout.NORTH);

        barangPanel.setBackground(new java.awt.Color(102, 102, 102));
        barangPanel.setPreferredSize(new java.awt.Dimension(1150, 150));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Nama Barang");

        namaBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Harga Beli");

        hargaBeli.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Harga Jual");

        hargaJual.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Satuan");

        satuan.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Modal");

        modal.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Rusak");

        rusak.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        updateBarang.setBackground(new java.awt.Color(51, 51, 51));
        updateBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        updateBarang.setForeground(new java.awt.Color(255, 255, 255));
        updateBarang.setText("Update");
        updateBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBarangActionPerformed(evt);
            }
        });

        submitBarang.setBackground(new java.awt.Color(51, 51, 51));
        submitBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        submitBarang.setForeground(new java.awt.Color(255, 255, 255));
        submitBarang.setText("Submit");
        submitBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout barangPanelLayout = new javax.swing.GroupLayout(barangPanel);
        barangPanel.setLayout(barangPanelLayout);
        barangPanelLayout.setHorizontalGroup(
            barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barangPanelLayout.createSequentialGroup()
                .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(barangPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(satuan, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modal, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rusak, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(barangPanelLayout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(updateBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addComponent(submitBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        barangPanelLayout.setVerticalGroup(
            barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barangPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(barangPanelLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rusak, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(barangPanelLayout.createSequentialGroup()
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(modal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(barangPanelLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(barangPanelLayout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(barangPanelLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(barangPanelLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(barangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(submitBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        dataPanel.add(barangPanel, java.awt.BorderLayout.NORTH);

        clientTable.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Cli", "Kota Cli", "Alamat Cli", "Nomor Telepon", "Nomor HP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientTable.setRowHeight(25);
        clientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientTableMouseClicked(evt);
            }
        });
        clientScrollPane.setViewportView(clientTable);

        dataPanel.add(clientScrollPane, java.awt.BorderLayout.CENTER);

        salesmanTable.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        salesmanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Salesman", "Nomer Depan", "Nomer Sales", "Nomor Telepon", "Kode Sales"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesmanTable.setRowHeight(25);
        salesmanTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesmanTableMouseClicked(evt);
            }
        });
        salesScrollPane.setViewportView(salesmanTable);

        dataPanel.add(salesScrollPane, java.awt.BorderLayout.CENTER);

        barangTable.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        barangTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Barang", "Harga Beli", "Harga Jual", "Satuan", "Modal", "Rusak"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        barangTable.setRowHeight(25);
        barangTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                barangTableMouseClicked(evt);
            }
        });
        barangScrollPane.setViewportView(barangTable);

        dataPanel.add(barangScrollPane, java.awt.BorderLayout.CENTER);

        add(dataPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

        String pilihanString;
        try {
            pilihanString = pilihan.getSelectedItem().toString();
        } catch (java.lang.NullPointerException e) {
            return;
        }
        
        jMenu1.setEnabled(false);
        jMenu2.setEnabled(false);
        jMenu3.setEnabled(false);
        jMenu4.setEnabled(false);
        pilihan.setEnabled(false);
        okButton.setEnabled(false);
        
        switch (pilihanString) {
            case "Client":
                dataPanel.add(clientPanel, java.awt.BorderLayout.NORTH);
                dataPanel.add(clientScrollPane, java.awt.BorderLayout.CENTER);
                showClient();
                break;
            case "Barang":
                dataPanel.add(barangPanel, java.awt.BorderLayout.NORTH);
                dataPanel.add(barangScrollPane, java.awt.BorderLayout.CENTER);
                showBarang();
                break;
            case "Salesman":
                dataPanel.add(salesPanel, java.awt.BorderLayout.NORTH);
                dataPanel.add(salesScrollPane, java.awt.BorderLayout.CENTER);
                showSales();
                break;
            default:
                break;
        }
        
        dataPanel.revalidate();
        dataPanel.repaint();
        dataPanel.setVisible(true);

        
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void showSales() {
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) salesmanTable.getModel();
        try (java.sql.Statement stmt = cons.createStatement()) {
            java.sql.ResultSet resultSet = stmt.executeQuery("SELECT * FROM salesman ORDER BY nama_sales");
            while (resultSet.next()) {
                
                tblModel.addRow(new String[] {
                    String.valueOf(resultSet.getInt("id")),
                    resultSet.getString("nama_sales"),
                    String.valueOf(resultSet.getInt("no_depan")),
                    String.valueOf(resultSet.getInt("no_nota")),
                    (resultSet.getString("no_telp_sales") == null) ? "" : resultSet.getString("no_telp_sales"),
                    resultSet.getString("kode_sales")
                });
                
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void showBarang() {
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) barangTable.getModel();
        try (java.sql.Statement stmt = cons.createStatement()) {
            java.sql.ResultSet resultSet = stmt.executeQuery("SELECT * FROM stock ORDER BY nama_barang");
            while (resultSet.next()) {
                
                tblModel.addRow(new String[] {
                    String.valueOf(resultSet.getInt("id")),
                    resultSet.getString("nama_barang"),
                    String.format("%,d", resultSet.getInt("harga_barang")),
                    String.format("%,d", resultSet.getInt("jual_barang")),
                    resultSet.getString("satuan_barang"),
                    String.format("%,d", resultSet.getInt("modal")),
                    String.valueOf(resultSet.getInt("rusak_barang"))
                });
                
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void showClient() {
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) clientTable.getModel();
        try (java.sql.Statement stmt = cons.createStatement()) {
            java.sql.ResultSet resultSet = stmt.executeQuery("SELECT * FROM client ORDER BY nama_client");
            while (resultSet.next()) {
                
                tblModel.addRow(new String[] {
                    String.valueOf(resultSet.getInt("id")),
                    resultSet.getString("nama_client"),
                    (resultSet.getString("kota_client") == null) ? "" : resultSet.getString("kota_client"),
                    (resultSet.getString("alamat_client") == null) ? "" : resultSet.getString("alamat_client"),
                    (resultSet.getString("telp_client") == null) ? "" : resultSet.getString("telp_client"),
                    (resultSet.getString("hp_client") == null) ? "" : resultSet.getString("hp_client")
                });
                
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void clientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientTableMouseClicked
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) clientTable.getModel();
        namaClient.setText(tblModel.getValueAt(clientTable.getSelectedRow(), 1).toString());
        kotaClient.setText(tblModel.getValueAt(clientTable.getSelectedRow(), 2).toString());
        alamatClient.setText(tblModel.getValueAt(clientTable.getSelectedRow(), 3).toString());
        noTelpClient.setText(tblModel.getValueAt(clientTable.getSelectedRow(), 4).toString());
        noHPClient.setText(tblModel.getValueAt(clientTable.getSelectedRow(), 5).toString());
    }//GEN-LAST:event_clientTableMouseClicked

    private void updateClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateClientActionPerformed
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) clientTable.getModel();
        if (clientTable.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String namaClientString = namaClient.getText();
        if (namaClientString.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(null, "Nama Client tidak boleh kosong", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String kota = kotaClient.getText();
        String alamat = alamatClient.getText();
        String telp = noTelpClient.getText();
        String hp = noHPClient.getText();
        String namaClientLama = tblModel.getValueAt(clientTable.getSelectedRow(), 1).toString();
        String kotaLama = tblModel.getValueAt(clientTable.getSelectedRow(), 2).toString();
        
        // VALIDASI
        if (namaClientString.equalsIgnoreCase(namaClientLama) == false ||
            kota.equalsIgnoreCase(kotaLama) == false) { // kalo nama atau kota client diganti, divalidasi dulu
            
            if (!kota.isEmpty())  {
                String query = "SELECT id FROM client WHERE nama_client = ? AND kota_client = ?";
                try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
                {
                    stmt.setString(1, namaClientString);
                    stmt.setString(2, kota);
                    java.sql.ResultSet resultSet = stmt.executeQuery();
                    if (resultSet.next())
                        throw new java.sql.SQLException("Nama dan kota client tersebut sudah terdaftar");
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else {
                String query = "SELECT id FROM client WHERE nama_client = ? AND kota_client IS NULL";
                try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
                {
                    stmt.setString(1, namaClientString);
                    java.sql.ResultSet resultSet = stmt.executeQuery();
                    if (resultSet.next())
                        throw new java.sql.SQLException("Nama dan kota client tersebut sudah terdaftar");
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            
        }
        
        // update table
        tblModel.setValueAt(namaClientString, clientTable.getSelectedRow(), 1);
        tblModel.setValueAt(kota, clientTable.getSelectedRow(), 2);
        tblModel.setValueAt(alamat, clientTable.getSelectedRow(), 3);
        tblModel.setValueAt(telp, clientTable.getSelectedRow(), 4);
        tblModel.setValueAt(hp, clientTable.getSelectedRow(), 5);
        
        
        // update di db
        int id = Integer.parseInt(tblModel.getValueAt(clientTable.getSelectedRow(), 0).toString());
        
        String query = "UPDATE client "
                    + "SET "
                       + "nama_client = ?, "
                       + "kota_client = ?, "
                       + "alamat_client = ?, "
                       + "telp_client = ?, "
                       + "hp_client = ? "
                    + "WHERE id = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaClientString);
            
            
            if (!kota.isEmpty())
                stmt.setString(2, kota);
            else
                stmt.setNull(2, java.sql.Types.VARCHAR);
            
            
            if (!alamat.isEmpty())
                stmt.setString(3, alamat);
            else
                stmt.setNull(3, java.sql.Types.VARCHAR);
            
            
            if (!telp.isEmpty())
                stmt.setString(4, telp);
            else
                stmt.setNull(4, java.sql.Types.VARCHAR);
            
            
            if (!hp.isEmpty())
                stmt.setString(5, hp);
            else
                stmt.setNull(5, java.sql.Types.VARCHAR);
            
            
            stmt.setInt(6, id);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        // set all default values
        namaClient.setText("");
        kotaClient.setText("");
        alamatClient.setText("");
        noTelpClient.setText("");
        noHPClient.setText("");
        
    }//GEN-LAST:event_updateClientActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        try {
            cons.rollback();
            cons.close();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        parentFrame.dispose();
        new com.sa.cobacoba.MainWindow().setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitClientActionPerformed
        try {
            cons.commit();
            cons.close();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        javax.swing.JOptionPane.showMessageDialog(null, "Success Editing Client", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        parentFrame.dispose();
        new com.sa.cobacoba.MainWindow().setVisible(true);
    }//GEN-LAST:event_submitClientActionPerformed

    private void updateSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSalesActionPerformed
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) salesmanTable.getModel();
        if (salesmanTable.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String namaSalesString = namaSales.getText();
        String nomerSalesString = nomorSales.getText();
        String noTelpSalesString = noTelpSales.getText();
        String kodeSalesString = kodeSales.getText();
        String namaSalesLama = tblModel.getValueAt(salesmanTable.getSelectedRow(), 1).toString();
        
        if (!namaSalesString.equalsIgnoreCase(namaSalesLama)) { // kalo nama sales diganti, validasi dulu
            
            String query = "SELECT nama_sales FROM salesman WHERE nama_sales = ?";
            try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
            {
                stmt.setString(1, namaSalesString);
                java.sql.ResultSet resultSet = stmt.executeQuery();
                if (resultSet.next())
                    throw new java.sql.SQLException("Nama sales sudah terdaftar");
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        }
        
        try {
            Integer.parseInt(nomerSalesString);
        } catch (java.lang.NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(null, "Masukkan format nomer sales yang benar", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (kodeSalesString.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(null, "Kode sales tidak boleh kosong", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // update ke table
        tblModel.setValueAt(namaSalesString, salesmanTable.getSelectedRow(), 1);
        tblModel.setValueAt(nomerSalesString, salesmanTable.getSelectedRow(), 3);
        tblModel.setValueAt(noTelpSalesString, salesmanTable.getSelectedRow(), 4);
        tblModel.setValueAt(kodeSalesString, salesmanTable.getSelectedRow(), 5);
        
        
        // get table data
        int id = Integer.parseInt(tblModel.getValueAt(salesmanTable.getSelectedRow(), 0).toString());
        
        // update db
        String query = "UPDATE salesman "
                     + "SET "
                        + "nama_sales = ?, "
                        + "no_nota = ?, "
                        + "no_telp_sales = ?, "
                        + "kode_sales = ? "
                     + "WHERE id = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaSalesString);
            stmt.setInt(2, Integer.parseInt(nomerSalesString));
            
            if (!noTelpSalesString.isEmpty())
                stmt.setString(3, noTelpSalesString);
            else
                stmt.setNull(3, java.sql.Types.VARCHAR);
            
            stmt.setString(4, kodeSalesString);
            stmt.setInt(5, id);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // update nama sales di db lain
        // jual dan jretur
        query = "UPDATE jual SET nama_sales = ? WHERE nama_sales = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaSalesString);
            stmt.setString(2, namaSalesLama);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        query = "UPDATE jretur SET nama_sales = ? WHERE nama_sales = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaSalesString);
            stmt.setString(2, namaSalesLama);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // set all default values
        namaSales.setText("");
        nomorSales.setText("");
        noTelpSales.setText("");
        kodeSales.setText("");
    }//GEN-LAST:event_updateSalesActionPerformed

    private void submitSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitSalesActionPerformed
        try {
            cons.commit();
            cons.close();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        javax.swing.JOptionPane.showMessageDialog(null, "Success Editing Salesman", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        parentFrame.dispose();
        new com.sa.cobacoba.MainWindow().setVisible(true);
    }//GEN-LAST:event_submitSalesActionPerformed

    private void salesmanTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesmanTableMouseClicked
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) salesmanTable.getModel();
        namaSales.setText(tblModel.getValueAt(salesmanTable.getSelectedRow(), 1).toString());
        nomorSales.setText(tblModel.getValueAt(salesmanTable.getSelectedRow(), 3).toString());
        noTelpSales.setText(tblModel.getValueAt(salesmanTable.getSelectedRow(), 4).toString());
        kodeSales.setText(tblModel.getValueAt(salesmanTable.getSelectedRow(), 5).toString());
    }//GEN-LAST:event_salesmanTableMouseClicked

    private void barangTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barangTableMouseClicked
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) barangTable.getModel();
        namaBarang.setText(tblModel.getValueAt(barangTable.getSelectedRow(), 1).toString());
        satuan.setText(tblModel.getValueAt(barangTable.getSelectedRow(), 4).toString());
        rusak.setText(tblModel.getValueAt(barangTable.getSelectedRow(), 6).toString());
        
        String hargaBeliString = tblModel.getValueAt(barangTable.getSelectedRow(), 2).toString();
        String hargaJualString = tblModel.getValueAt(barangTable.getSelectedRow(), 3).toString();
        String modalString = tblModel.getValueAt(barangTable.getSelectedRow(), 5).toString();
        
        if (hargaBeliString.contains(",")) {
            hargaBeli.setText(hargaBeliString.replaceAll(",", ""));
        } else if (hargaBeliString.contains(".")) {
            hargaBeli.setText(hargaBeliString.replaceAll("\\.", ""));
        } else {
            hargaBeli.setText(hargaBeliString);
        }
        
        if (hargaJualString.contains(",")) {
            hargaJual.setText(hargaJualString.replaceAll(",", ""));
        } else if (hargaJualString.contains(".")) {
            hargaJual.setText(hargaJualString.replaceAll("\\.", ""));
        } else {
            hargaJual.setText(hargaJualString);
        }
        
        if (modalString.contains(",")) {
            modal.setText(modalString.replaceAll(",", ""));
        } else if (modalString.contains(".")) {
            modal.setText(modalString.replaceAll("\\.", ""));
        } else {
            modal.setText(modalString);
        }
    }//GEN-LAST:event_barangTableMouseClicked

    private void submitBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBarangActionPerformed
        try {
            cons.commit();
            cons.close();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        javax.swing.JOptionPane.showMessageDialog(null, "Success Editing Barang", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        parentFrame.dispose();
        new com.sa.cobacoba.MainWindow().setVisible(true);
    }//GEN-LAST:event_submitBarangActionPerformed

    private void updateBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBarangActionPerformed
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) barangTable.getModel();
        if (barangTable.getSelectedRowCount() != 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String namaBarangString = namaBarang.getText();
        String hargaBeliString = hargaBeli.getText();
        String hargaJualString = hargaJual.getText();
        String satuanString = satuan.getText();
        String modalString = modal.getText();
        String rusakString = rusak.getText();
        String namaBarangLama = tblModel.getValueAt(barangTable.getSelectedRow(), 1).toString();
        
        
        // VALIDASI
        if (!namaBarangLama.equalsIgnoreCase(namaBarangString)) { // kalo nama barang diganti, validasi
            try (java.sql.PreparedStatement stmt = cons.prepareStatement("SELECT id FROM stock WHERE nama_barang = ?"))
            {
                stmt.setString(1, namaBarangString);
                java.sql.ResultSet resultSet = stmt.executeQuery();
                if (resultSet.next())
                    throw new java.sql.SQLException("Nama barang tersebut sudah terdaftar");

            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        
        try {
            if (rusakString.isEmpty())
                throw new java.lang.NumberFormatException("Rusak barang kosong");

            if (hargaBeliString.isEmpty())
                throw new java.lang.NumberFormatException("Harga beli barang kosong");

            if (satuanString.isEmpty())
                throw new java.lang.NumberFormatException("Satuan barang kosong");

            if (modalString.isEmpty())
                throw new java.lang.NumberFormatException("Modal barang kosong");

            Integer.parseInt(hargaBeliString);

            if (!hargaJualString.isEmpty())
                Integer.parseInt(hargaJualString);

            Integer.parseInt(modalString);
            Integer.parseInt(rusakString);
        } catch (java.lang.NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        
        // update table
        tblModel.setValueAt(namaBarangString, barangTable.getSelectedRow(), 1);
        tblModel.setValueAt(String.format("%,d", Integer.valueOf(hargaBeliString)), barangTable.getSelectedRow(), 2);
        tblModel.setValueAt(String.format("%,d", Integer.valueOf(hargaJualString)), barangTable.getSelectedRow(), 3);
        tblModel.setValueAt(satuanString, barangTable.getSelectedRow(), 4);
        tblModel.setValueAt(String.format("%,d", Integer.valueOf(modalString)), barangTable.getSelectedRow(), 5);
        tblModel.setValueAt(rusakString, barangTable.getSelectedRow(), 6);
        
        
        int id = Integer.parseInt(tblModel.getValueAt(barangTable.getSelectedRow(), 0).toString());
        String query = "UPDATE stock "
                        + "SET "
                            + "nama_barang = ?, "
                            + "harga_barang = ?, "
                            + "jual_barang = ?, "
                            + "satuan_barang = ?, "
                            + "modal = ?, "
                            + "rusak_barang = ? "
                        + "WHERE id = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaBarangString);
            stmt.setInt(2, Integer.parseInt(hargaBeliString));
            
            if (!hargaJualString.isEmpty())
                stmt.setInt(3, Integer.parseInt(hargaJualString));
            else
                stmt.setNull(3, java.sql.Types.INTEGER);
            
            stmt.setString(4, satuanString);
            stmt.setInt(5, Integer.parseInt(modalString));
            stmt.setInt(6, Integer.parseInt(rusakString));
            stmt.setInt(7, id);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // ganti di db lain
        // beli, bretur, jual, jretur
        query = "UPDATE beli "
                + "SET "
                    + "nama_barang = ? "
                + "WHERE nama_barang = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaBarangString);
            stmt.setString(2, namaBarangLama);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        query = "UPDATE bretur "
                + "SET "
                    + "nama_barang = ? "
                + "WHERE nama_barang = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaBarangString);
            stmt.setString(2, namaBarangLama);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        query = "UPDATE jual "
                + "SET "
                    + "nama_barang = ? "
                + "WHERE nama_barang = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaBarangString);
            stmt.setString(2, namaBarangLama);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        query = "UPDATE jretur "
                + "SET "
                    + "nama_barang = ? "
                + "WHERE nama_barang = ?";
        try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
        {
            stmt.setString(1, namaBarangString);
            stmt.setString(2, namaBarangLama);
            stmt.executeUpdate();
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        // set all default values
        namaBarang.setText("");
        hargaBeli.setText("");
        hargaJual.setText("");
        modal.setText("");
        satuan.setText("");
        rusak.setText("");
    }//GEN-LAST:event_updateBarangActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamatClient;
    private javax.swing.JPanel barangPanel;
    private javax.swing.JScrollPane barangScrollPane;
    private javax.swing.JTable barangTable;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel clientPanel;
    private javax.swing.JScrollPane clientScrollPane;
    private javax.swing.JTable clientTable;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JTextField hargaBeli;
    private javax.swing.JTextField hargaJual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField kodeSales;
    private javax.swing.JTextField kotaClient;
    private javax.swing.JTextField modal;
    private javax.swing.JTextField namaBarang;
    private javax.swing.JTextField namaClient;
    private javax.swing.JTextField namaSales;
    private javax.swing.JTextField noHPClient;
    private javax.swing.JTextField noTelpClient;
    private javax.swing.JTextField noTelpSales;
    private javax.swing.JTextField nomorSales;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> pilihan;
    private javax.swing.JTextField rusak;
    private javax.swing.JPanel salesPanel;
    private javax.swing.JScrollPane salesScrollPane;
    private javax.swing.JTable salesmanTable;
    private javax.swing.JTextField satuan;
    private javax.swing.JPanel sidebarPanel;
    private javax.swing.JButton submitBarang;
    private javax.swing.JButton submitClient;
    private javax.swing.JButton submitSales;
    private javax.swing.JButton updateBarang;
    private javax.swing.JButton updateClient;
    private javax.swing.JButton updateSales;
    // End of variables declaration//GEN-END:variables
}
