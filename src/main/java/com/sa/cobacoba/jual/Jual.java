/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.sa.cobacoba.jual;

import com.sa.cobacoba.functions.GeneralFunction;

public class Jual extends javax.swing.JFrame {
    java.sql.Connection cons;
    
    public Jual(java.sql.Connection conn) {
        initComponents();
        dataPanel.setVisible(false);
        cons = conn;
        setComboBox(conn);
    }
    
    private void setComboBox(java.sql.Connection conn) {
        getPilihanLangganan(conn);
        getPilihanSales(conn);
        
        setTodayDate();
        
        namaLangganan.setSelectedIndex(-1);
        namaSales.setSelectedIndex(-1);
        nomorNota.setSelectedIndex(-1);
    }
    
    private void setTodayDate() {
        java.time.LocalDate today = java.time.LocalDate.now();
        java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDate = today.format(formatter);
        tanggalNota.addItem(formattedDate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sidebarPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        namaLangganan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        namaSales = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        nomorNota = new javax.swing.JComboBox<>();
        nota = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tanggalNota = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        dataPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        hargaBeli = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        hargaJual = new javax.swing.JTextField();
        jumlah = new javax.swing.JTextField();
        jumlahText = new javax.swing.JLabel();
        peringatan = new javax.swing.JLabel();
        buttonAdd = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        namaBarang = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableJual = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        diskon = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        totalHarga = new javax.swing.JTextField();
        jualButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(950, 500));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMinimumSize(new java.awt.Dimension(950, 500));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 500));
        jPanel1.setLayout(new java.awt.BorderLayout());

        sidebarPanel.setBackground(new java.awt.Color(102, 102, 102));
        sidebarPanel.setPreferredSize(new java.awt.Dimension(200, 476));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Jual Barang");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Langganan");

        namaLangganan.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        namaLangganan.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nama Salesman");

        namaSales.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        namaSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaSalesActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nomor Nota");

        nomorNota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        nota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tanggal Nota");

        tanggalNota.setEditable(true);
        tanggalNota.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("dd-MM-yyyy");

        javax.swing.GroupLayout sidebarPanelLayout = new javax.swing.GroupLayout(sidebarPanel);
        sidebarPanel.setLayout(sidebarPanelLayout);
        sidebarPanelLayout.setHorizontalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tanggalNota, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(namaLangganan, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(namaSales, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nomorNota, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(81, 81, 81))
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nota, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidebarPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        sidebarPanelLayout.setVerticalGroup(
            sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaLangganan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaSales, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(sidebarPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(nota))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nomorNota, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tanggalNota, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sidebarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        jPanel1.add(sidebarPanel, java.awt.BorderLayout.WEST);

        dataPanel.setBackground(new java.awt.Color(51, 51, 51));
        dataPanel.setPreferredSize(new java.awt.Dimension(630, 476));
        dataPanel.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel4.setPreferredSize(new java.awt.Dimension(580, 150));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nama Barang");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Harga Beli");

        hargaBeli.setEditable(false);
        hargaBeli.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        hargaBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaBeliActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Harga Jual");

        hargaJual.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        hargaJual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaJualActionPerformed(evt);
            }
        });

        jumlah.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahActionPerformed(evt);
            }
        });

        jumlahText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jumlahText.setForeground(new java.awt.Color(255, 255, 255));
        jumlahText.setText("Jumlah: 0");

        peringatan.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        peringatan.setForeground(new java.awt.Color(255, 0, 0));
        peringatan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        peringatan.setText("jLabel10");

        buttonAdd.setBackground(new java.awt.Color(51, 51, 51));
        buttonAdd.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        buttonAdd.setForeground(new java.awt.Color(255, 255, 255));
        buttonAdd.setText("Add");
        buttonAdd.setBorder(null);
        buttonAdd.setFocusable(false);
        buttonAdd.setMaximumSize(new java.awt.Dimension(38, 16));
        buttonAdd.setMinimumSize(new java.awt.Dimension(38, 16));
        buttonAdd.setPreferredSize(new java.awt.Dimension(38, 16));
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonUpdate.setBackground(new java.awt.Color(51, 51, 51));
        buttonUpdate.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        buttonUpdate.setText("Update");
        buttonUpdate.setBorder(null);
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        buttonDelete.setBackground(new java.awt.Color(51, 51, 51));
        buttonDelete.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(255, 255, 255));
        buttonDelete.setText("Delete");
        buttonDelete.setBorder(null);
        buttonDelete.setMaximumSize(new java.awt.Dimension(38, 16));
        buttonDelete.setMinimumSize(new java.awt.Dimension(38, 16));
        buttonDelete.setPreferredSize(new java.awt.Dimension(38, 16));
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        namaBarang.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        namaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(peringatan, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jumlahText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jumlahText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hargaBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(peringatan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dataPanel.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        tableJual.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        tableJual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Harga Beli", "Harga jual", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableJual.setRowHeight(25);
        tableJual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableJualMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableJual);

        dataPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Harga");

        harga.setEditable(false);
        harga.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        harga.setText("0");
        harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Diskon");

        diskon.setText("0");
        diskon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diskonActionPerformed(evt);
            }
        });
        diskon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diskonKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                diskonKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total Harga");

        totalHarga.setEditable(false);
        totalHarga.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        totalHarga.setText("0");
        totalHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalHargaActionPerformed(evt);
            }
        });

        jualButton.setBackground(new java.awt.Color(102, 102, 102));
        jualButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jualButton.setForeground(new java.awt.Color(255, 255, 255));
        jualButton.setText("Jual >>");
        jualButton.setBorder(null);
        jualButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jualButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(harga)
                    .addComponent(diskon, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                        .addGap(142, 142, 142))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jualButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diskon, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jualButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        dataPanel.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(dataPanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean salah = validateAll();
        if (!salah) {
            peringatan.setVisible(false);
//            Buat combo box disabled
            namaLangganan.setEditable(false);
            namaLangganan.setEnabled(false);
            namaSales.setEditable(false);
            namaSales.setEnabled(false);
            nomorNota.setEditable(false);
            nomorNota.setEnabled(false);
            tanggalNota.setEditable(false);
            tanggalNota.setEnabled(false);
            addBarangMenu();
            hargaBeli.setText("");
            hargaJual.setText("");
            jButton1.setEnabled(false);
            nota.setEditable(false);
            nota.setEnabled(false);
            dataPanel.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private boolean validateAll() {
        try {
            String langganan = namaLangganan.getSelectedItem().toString();
            String salesman = namaSales.getSelectedItem().toString();
            String hasilNomorNota = nomorNota.getSelectedItem().toString();
            String tanggalNotaHasil = tanggalNota.getSelectedItem().toString();

            if (langganan.isEmpty() || salesman.isEmpty() || hasilNomorNota.isEmpty() || tanggalNotaHasil.isEmpty()) {
                throw new Exception();
            }
        } catch (Exception e) {
            return true;
        }
        
        return false;
    }
    
    private void addBarangMenu() {
        try {
            java.sql.Statement statement = cons.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery("SELECT nama_barang FROM stock ORDER BY nama_barang");
            while (resultSet.next()) {
                namaBarang.addItem(resultSet.getString("nama_barang"));
            }
        } catch (java.sql.SQLException e) {
            
        } finally {
            namaBarang.setSelectedIndex(-1);
        }
    }
    
    private void hargaBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaBeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaBeliActionPerformed

    private void hargaJualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaJualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaJualActionPerformed

    private void jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        boolean salah = validateFormTambah();
        if (salah) {
            javax.swing.Timer timer = new javax.swing.Timer(5000, e -> peringatan.setVisible(false));
            timer.setRepeats(false);
            timer.start();
        } else {
//            ADD TO THE TABLE

            String namaBarangString = namaBarang.getSelectedItem().toString();
            int stockDb = 0;
            int stockInt = Integer.parseInt(jumlah.getText());
//            1. VALIDATE QUANTITY

            try (java.sql.Statement statement = cons.createStatement())
            {
                java.sql.ResultSet resultSet = statement.executeQuery("SELECT * FROM stock WHERE nama_barang = '" + namaBarangString + "'");
                while (resultSet.next()) {
                    stockDb = resultSet.getInt("stock_akhir");
                    if (stockInt > stockDb) {
                        throw new java.lang.NumberFormatException("Jumlah melebihi stock yang dipunya");
                    }
                }
            } catch (java.sql.SQLException | java.lang.NumberFormatException e) {
                javax.swing.Timer timer = new javax.swing.Timer(5000, e2 -> peringatan.setVisible(false));
                timer.setRepeats(false);
                peringatan.setText(e.getMessage());
                peringatan.setVisible(true);
                timer.start();
                return;
            }

            javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableJual.getModel();
            int totalStock = 0;
            for (int i = 0; i < tblModel.getRowCount(); i++) {
                String namaBarangTable = tblModel.getValueAt(i, 0).toString();
                if (namaBarangTable.equals(namaBarangString)) {
                    int stockTable = Integer.parseInt(tblModel.getValueAt(i, 3).toString());
                    totalStock += stockTable;
                }
            }
            
            if (totalStock + stockInt > stockDb) {
                javax.swing.Timer timer = new javax.swing.Timer(5000, e -> peringatan.setVisible(false));
                timer.setRepeats(false);
                peringatan.setText("Total barang yang dijual melebihi stock yang dipunyai");
                peringatan.setVisible(true);
                timer.start();
                return;
            }


//            2. ADD TO TABLE
            String[] data = {namaBarangString, hargaBeli.getText(), hargaJual.getText(), jumlah.getText()};
            tblModel.addRow(data);
            

//            3. CLEAR THE FIELD
            namaBarang.setSelectedIndex(-1);
            hargaBeli.setText("");
            hargaJual.setText("");
            jumlah.setText("");
            
//            4. UPDATE HARGA DAN TOTAL HARGA
            updateHarga();
        }
    }//GEN-LAST:event_buttonAddActionPerformed
    
    private boolean validateFormTambah() {
        try {
            String namaBarangString = namaBarang.getSelectedItem().toString();
            String hargaJualString = hargaJual.getText();
            String jumlahString = jumlah.getText();
            
            if (namaBarangString.isEmpty() || hargaJualString.isEmpty() || jumlahString.isEmpty()) {
                throw new Exception("Tidak boleh ada field yang kosong");
            }
            
            Integer.parseInt(jumlahString);
            Integer.parseInt(hargaJualString);
        } catch (Exception e) {
            peringatan.setText(e.getMessage());
            peringatan.setVisible(true);
            return true;
        }
        
        return false;
    }
    
    private void updateHarga() {
        long hargaTotalLong = 0;
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableJual.getModel();
        if (tblModel.getRowCount() == 0) {
            harga.setText("0");
            totalHarga.setText("0");
            return;
        }
        
        for (int i = 0; i < tblModel.getRowCount(); i++) {
            long hargaLong = Long.parseLong(tblModel.getValueAt(i, 2).toString());
            long qty = Long.parseLong(tblModel.getValueAt(i, 3).toString());
            hargaTotalLong += hargaLong * qty;
        }
        harga.setText(String.valueOf(hargaTotalLong));
        double diskonLong = Double.parseDouble(diskon.getText()) / 100;
        long totalHargaDiskonLong = hargaTotalLong - Math.round(hargaTotalLong * diskonLong);
        totalHarga.setText(String.valueOf(totalHargaDiskonLong));
    }
    
    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableJual.getModel();
        if (tableJual.getSelectedRowCount() == 1) {
            boolean salah = validateFormTambah();
            if (salah) {
                javax.swing.Timer timer = new javax.swing.Timer(5000, e -> peringatan.setVisible(false));
                timer.setRepeats(false);
                timer.start();
                return;
            }
            
//            VALIDATE QUANTITY
            String namaBarangString = namaBarang.getSelectedItem().toString();
            int stockInt = Integer.parseInt(jumlah.getText());
            int stockDb = 0;
            try {
                java.sql.Statement statement = cons.createStatement();
                java.sql.ResultSet resultSet = statement.executeQuery("SELECT * FROM stock WHERE nama_barang = '" + namaBarangString + "'");
                while (resultSet.next()) {
                    stockDb = resultSet.getInt("stock_akhir");
                    if (stockInt > stockDb) {
                        throw new NumberFormatException("Jumlah melebihi stock yang dipunya");
                    }
                }
            } catch (java.sql.SQLException | java.lang.NumberFormatException e) {
                javax.swing.Timer timer = new javax.swing.Timer(5000, e2 -> peringatan.setVisible(false));
                timer.setRepeats(false);
                peringatan.setText(e.getMessage());
                peringatan.setVisible(true);
                timer.start();
                return;
            }
            
            
            int stockLama = Integer.parseInt(tblModel.getValueAt(tableJual.getSelectedRow(), 3).toString());
            tblModel.setValueAt(String.valueOf(stockInt), tableJual.getSelectedRow(), 3);
            int totalStock = 0;
            for (int i = 0; i < tblModel.getRowCount(); i++) {
                String namaBarangTable = tblModel.getValueAt(i, 0).toString();
                if (namaBarangTable.equals(namaBarangString)) {
                    int stockTable = Integer.parseInt(tblModel.getValueAt(i, 3).toString());
                    totalStock += stockTable;
                }
            }
            
            if (totalStock > stockDb) {
                javax.swing.Timer timer = new javax.swing.Timer(5000, e -> peringatan.setVisible(false));
                timer.setRepeats(false);
                peringatan.setText("Total barang yang dijual melebihi stock yang dipunyai");
                peringatan.setVisible(true);
                timer.start();
                tblModel.setValueAt(String.valueOf(stockLama), tableJual.getSelectedRow(), 3);
                return;
            }
            
            
//            UPDATE
            String hargaBeliString = hargaBeli.getText();
            String hargaJualString = hargaJual.getText();
            String jumlahString = jumlah.getText();
            
            tblModel.setValueAt(namaBarangString, tableJual.getSelectedRow(), 0);
            tblModel.setValueAt(hargaBeliString, tableJual.getSelectedRow(), 1);
            tblModel.setValueAt(hargaJualString, tableJual.getSelectedRow(), 2);
            tblModel.setValueAt(jumlahString, tableJual.getSelectedRow(), 3);
            
            javax.swing.JOptionPane.showMessageDialog(null, "Data berhasil diupdate", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
//            SET ALL TO DEFAULT VALUES
            namaBarang.setSelectedIndex(-1);
            hargaBeli.setText("");
            hargaJual.setText("");
            jumlah.setText("");
            
//            UPDATE HARGA DAN TOTAL HARGA
            updateHarga();
        } else {
//            DONT UPDATE
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel)tableJual.getModel();
        if (tableJual.getSelectedRowCount() == 1) {
            int status = javax.swing.JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus?", "DELETE", javax.swing.JOptionPane.YES_NO_OPTION);
            if (status == 0) {
//                HAPUS
                tblModel.removeRow(tableJual.getSelectedRow());
                
//                SET ALL DEFAULT VALUES
                namaBarang.setSelectedIndex(-1);
                hargaBeli.setText("");
                hargaJual.setText("");
                jumlah.setText("");
                
//                UPDATE HARGA DAN TOTAL HARGA
                updateHarga();
                
                javax.swing.JOptionPane.showMessageDialog(null, "SUCCESS DELETING", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Pilih satu row", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void hargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaActionPerformed

    private void diskonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diskonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diskonActionPerformed

    private void totalHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalHargaActionPerformed

    private void namaSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaSalesActionPerformed
        try {
            String namaSalesman = namaSales.getSelectedItem().toString();
            if (namaSalesman == null) {
                throw new java.lang.NullPointerException();
            }
            getPilihanNota(namaSalesman);
        } catch (java.lang.NullPointerException e) {

        }
    }//GEN-LAST:event_namaSalesActionPerformed

    private void namaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaBarangActionPerformed
        try {
            String namaBarangString = namaBarang.getSelectedItem().toString();
            if (namaBarangString.isEmpty()) {
                throw new Exception();
            }
            java.sql.Statement statement = cons.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery("SELECT * FROM stock WHERE nama_barang = '" + namaBarangString + "'");
            while (resultSet.next()) {
                int beli = resultSet.getInt("harga_barang");
                int jual = resultSet.getInt("jual_barang");
                int stockInt = resultSet.getInt("stock_akhir");
                
                hargaBeli.setText(String.valueOf(beli));
                hargaJual.setText(String.valueOf(jual));
                jumlahText.setText("Jumlah: " + String.valueOf(stockInt));
            }
        } catch (Exception e) {
            jumlahText.setText("Jumlah: 0");
        }
    }//GEN-LAST:event_namaBarangActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            cons.close();
        } catch (java.sql.SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        new com.sa.cobacoba.MainWindow().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void diskonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diskonKeyTyped
        
    }//GEN-LAST:event_diskonKeyTyped

    private void diskonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diskonKeyReleased
        try {
            long hargaTotalLong = Long.parseLong(harga.getText());
            double diskonLong = Double.parseDouble(diskon.getText()) / 100;
            if (diskon.getText().isEmpty()) {
                throw new java.lang.NullPointerException();
            }
            long totalHargaDiskonLong = hargaTotalLong - Math.round(hargaTotalLong * diskonLong);
            totalHarga.setText(String.valueOf(totalHargaDiskonLong));
            jualButton.setEnabled(true);
        } catch (java.lang.NullPointerException | java.lang.NumberFormatException e) {
            jualButton.setEnabled(false);
        }
    }//GEN-LAST:event_diskonKeyReleased

    private void tableJualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableJualMouseClicked
        javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableJual.getModel();
        String namaBarangString = tblModel.getValueAt(tableJual.getSelectedRow(), 0).toString();
        String hargaBeliString = tblModel.getValueAt(tableJual.getSelectedRow(), 1).toString();
        String hargaJualString = tblModel.getValueAt(tableJual.getSelectedRow(), 2).toString();
        String jumlahString = tblModel.getValueAt(tableJual.getSelectedRow(), 3).toString();
        
        namaBarang.setSelectedItem(namaBarangString);
        hargaBeli.setText(hargaBeliString);
        hargaJual.setText(hargaJualString);
        jumlah.setText(jumlahString);
    }//GEN-LAST:event_tableJualMouseClicked

    private void jualButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jualButtonActionPerformed
        int totalHargaTemp = Integer.parseInt(totalHarga.getText());
        if (totalHargaTemp == 0){
            javax.swing.JOptionPane.showMessageDialog(null, "Tidak ada penjualan", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int status = javax.swing.JOptionPane.showConfirmDialog(null, "Sudah yakin dengan datanya?", "Confirm Submission", javax.swing.JOptionPane.YES_NO_OPTION);
        if (status == 0) {
    //        GET NAMA LANGGANAN, SALESMAN, NO NOTA, TANGGAL NOTA
            String namaLanggananString = namaLangganan.getSelectedItem().toString();
            String namaSalesString = namaSales.getSelectedItem().toString();
            String tanggalNotaString = tanggalNota.getSelectedItem().toString();
            
            javax.swing.table.DefaultTableModel tblModel = (javax.swing.table.DefaultTableModel) tableJual.getModel();
            
//            GET TODAY DATE IN SQL
            java.sql.Date sqlDate = GeneralFunction.date2SQLDate(tanggalNotaString);
            
//            SEARCH ID NAMA LANGGANAN
            String namaCli = null, kotaCli;
            String query;
            try (java.util.Scanner scanner = new java.util.Scanner(namaLanggananString))
            {
                scanner.useDelimiter("/");
                namaCli = scanner.next();
                kotaCli = scanner.next();

                if (kotaCli == null)
                    throw new java.util.NoSuchElementException();

            } catch (java.util.NoSuchElementException e) {
                kotaCli = null;
            }

            int id = 0;
            if (kotaCli == null) {
                query = "SELECT id FROM client WHERE nama_client = ? AND kota_client IS NULL";
                try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
                {
                    stmt.setString(1, namaCli);
                    java.sql.ResultSet resultSet = stmt.executeQuery();
                    while (resultSet.next()) {
                        id = resultSet.getInt("id");
                    }
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                query = "SELECT id FROM client WHERE nama_client = ? AND kota_client = ?";
                try (java.sql.PreparedStatement stmt = cons.prepareStatement(query))
                {
                    stmt.setString(1, namaCli);
                    stmt.setString(2, kotaCli);
                    java.sql.ResultSet resultSet = stmt.executeQuery();
                    while (resultSet.next()) {
                        id = resultSet.getInt("id");
                    }
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            
            String nomorNotaString;
            if (nota.getText().isEmpty()) {
                nomorNotaString = nomorNota.getSelectedItem().toString();
            } else {
                nomorNotaString = nota.getText();
            }

//            LOOPING DI SETIAP TABLE SAMBIL:
            for (int i = 0; i < tblModel.getRowCount(); i++) {
                String namaBarangString = tblModel.getValueAt(i, 0).toString();
                int hargaJualInt = Integer.parseInt(tblModel.getValueAt(i, 2).toString());
                int stockInt = Integer.parseInt(tblModel.getValueAt(i, 3).toString());


//              KURANGIN STOCK DI stock
                try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE stock SET "
                            + "stock_akhir = stock_akhir - ?, "
                            + "qty_out = qty_out + ? "
                            + "WHERE nama_barang = ?")){
                    stmt.setInt(1, stockInt);
                    stmt.setInt(2, stockInt);
                    stmt.setString(3, namaBarangString);
                    stmt.executeUpdate();
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Gagal mengkurangi stock " + namaBarangString, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                
//              MASUKIN KE jual
                try (java.sql.PreparedStatement stmt = cons.prepareStatement("INSERT INTO jual (id_client, nama_sales, "
                        + "nomor_nota, tanggal_nota, nama_barang, harga_barang, qty_barang, total_harga, diskon_nota) VALUES "
                        + "(?, ?, ?, ?, ?, ?, ?, ?, ?)"))
                {
                    stmt.setInt(1, id);
                    stmt.setString(2, namaSalesString);
                    stmt.setString(3, nomorNotaString);
                    stmt.setDate(4, sqlDate);
                    stmt.setString(5, namaBarangString);
                    stmt.setInt(6, hargaJualInt);
                    stmt.setInt(7, stockInt);
                    stmt.setInt(8, hargaJualInt * stockInt);
                    stmt.setDouble(9, Double.parseDouble(diskon.getText()) / 100);
                    stmt.execute();
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Gagal menambahkan ke db jual, nama barang: " + namaBarangString, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
            
//          MASUKIN KE Jnota
            try (java.sql.PreparedStatement stmt = cons.prepareStatement("INSERT INTO jnota "
                    + "(id_client, nomor_nota, tanggal_nota, nilai_nota, diskon_nota, lunas_nota, diskon_lunas, saldo_nota)"
                    + " VALUES (?, ?, ?, ?, ?, ?, ?, ?)"))
            {
                stmt.setInt(1, id);
                stmt.setString(2, nomorNotaString);
                stmt.setDate(3, sqlDate);
                stmt.setInt(4, Integer.parseInt(totalHarga.getText()));
                stmt.setDouble(5, Double.parseDouble(diskon.getText()) / 100);
                stmt.setInt(6, 0);
                stmt.setDouble(7, 0);
                stmt.setInt(8, Integer.parseInt(totalHarga.getText()));
                stmt.execute();
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Gagal menambahkan ke db jnota", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

//          INCREMENT NOMOR NOTA SALESMAN
            if (nota.getText().isEmpty()) {
                try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE salesman"
                    + " SET no_nota = no_nota + 1 WHERE nama_sales = ?")) {
                    stmt.setString(1, namaSalesString);
                    stmt.executeUpdate();
                } catch (java.sql.SQLException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Gagal update nomor nota salesman", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
            
            
//          TAMBAHIN SLDAKHIR_PIUTANG client
            try (java.sql.PreparedStatement stmt = cons.prepareStatement("UPDATE client "
                    + "SET sldakhir_piutang = sldakhir_piutang + ? "
                    + "WHERE id = ?"))
            {
                stmt.setInt(1, Integer.parseInt(totalHarga.getText()));
                stmt.setInt(2, id);
                stmt.executeUpdate();
            } catch (java.sql.SQLException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Gagal menambahkan saldo piutang", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
            
//            SUCCESS MESSAGE
            javax.swing.JOptionPane.showMessageDialog(null, "SUCCESS JUAL BARANG", "SUCCESS", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            dispose();
            new com.sa.cobacoba.MainWindow().setVisible(true);
        }
    }//GEN-LAST:event_jualButtonActionPerformed
    
    private void getPilihanNota(String namaSalesman) {
        try {
            java.sql.Statement statement = cons.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery("SELECT no_depan, no_nota FROM salesman WHERE nama_sales = '" + namaSalesman + "'");
            while (resultSet.next()) {
                int noDepanInt = resultSet.getInt("no_depan");
                int noNotaInt = resultSet.getInt("no_nota");
                String temp = String.valueOf(noDepanInt);
                temp = temp.concat(String.format("%05d", noNotaInt+1));
                nomorNota.removeAllItems();
                nomorNota.addItem(temp);
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void getPilihanLangganan(java.sql.Connection conn) {
        try {
            java.sql.Statement statement = conn.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery("SELECT * FROM client ORDER BY nama_client");
            while (resultSet.next()) {
                String temp = resultSet.getString("nama_client");
                String kota = resultSet.getString("kota_client");
                if (kota != null) {
                    temp = temp.concat("/");
                    temp = temp.concat(resultSet.getString("kota_client"));
                }
                namaLangganan.addItem(temp);
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private void getPilihanSales(java.sql.Connection conn) {
        try {
            java.sql.Statement statement = conn.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery("SELECT * FROM salesman ORDER BY nama_sales");
            while (resultSet.next()) {
                String temp = resultSet.getString("nama_sales");
                namaSales.addItem(temp);
            }
        } catch (java.sql.SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JTextField diskon;
    private javax.swing.JTextField harga;
    private javax.swing.JTextField hargaBeli;
    private javax.swing.JTextField hargaJual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jualButton;
    private javax.swing.JTextField jumlah;
    private javax.swing.JLabel jumlahText;
    private javax.swing.JComboBox<String> namaBarang;
    private javax.swing.JComboBox<String> namaLangganan;
    private javax.swing.JComboBox<String> namaSales;
    private javax.swing.JComboBox<String> nomorNota;
    private javax.swing.JTextField nota;
    private javax.swing.JLabel peringatan;
    private javax.swing.JPanel sidebarPanel;
    private javax.swing.JTable tableJual;
    private javax.swing.JComboBox<String> tanggalNota;
    private javax.swing.JTextField totalHarga;
    // End of variables declaration//GEN-END:variables
}
